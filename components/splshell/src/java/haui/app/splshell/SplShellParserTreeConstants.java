/* Generated By:JJTree: Do not edit this line. R:\Dev\haui\components\splshell\src\java\haui\app\splshell\SplShellParserTreeConstants.java */

package haui.app.splshell;

public interface SplShellParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTVARDECLARATION = 1;
  public int JJTVARIABLEDECLARATOR = 2;
  public int JJTVARIABLEDECLARATORID = 3;
  public int JJTARRAYDIMNODE = 4;
  public int JJTMETHODDECLARATION = 5;
  public int JJTMETHODDECLARATOR = 6;
  public int JJTFORMALPARAMETERS = 7;
  public int JJTFORMALPARAMETER = 8;
  public int JJTMAINMETHODDECLARATION = 9;
  public int JJTMAINMETHODDECLARATOR = 10;
  public int JJTMAINPARAMETER = 11;
  public int JJTMAINDECLARATORID = 12;
  public int JJTMAPPEDMETHODDECLARATION = 13;
  public int JJTMAPPEDBLOCK = 14;
  public int JJTTYPE = 15;
  public int JJTRESULTTYPE = 16;
  public int JJTVOID = 17;
  public int JJTARRAYINITIALIZER = 18;
  public int JJTASSIGNMENT = 19;
  public int JJTADDASSIGNMENT = 20;
  public int JJTSUBSTRACTASSIGNMENT = 21;
  public int JJTMULTASSIGNMENT = 22;
  public int JJTDIVASSIGNMENT = 23;
  public int JJTANDASSIGNMENT = 24;
  public int JJTMODASSIGNMENT = 25;
  public int JJTORASSIGNMENT = 26;
  public int JJTXORASSIGNMENT = 27;
  public int JJTORNODE = 28;
  public int JJTANDNODE = 29;
  public int JJTBITWISEORNODE = 30;
  public int JJTBITWISEXORNODE = 31;
  public int JJTBITWISEANDNODE = 32;
  public int JJTEQNODE = 33;
  public int JJTNENODE = 34;
  public int JJTLTNODE = 35;
  public int JJTGTNODE = 36;
  public int JJTLENODE = 37;
  public int JJTGENODE = 38;
  public int JJTADDNODE = 39;
  public int JJTSUBTRACTNODE = 40;
  public int JJTMULNODE = 41;
  public int JJTDIVNODE = 42;
  public int JJTMODNODE = 43;
  public int JJTPOSITIVECONSTNODE = 44;
  public int JJTNEGATIVECONSTNODE = 45;
  public int JJTBITWISECOMPLNODE = 46;
  public int JJTNOTNODE = 47;
  public int JJTPREINCREMENTEXPRESSION = 48;
  public int JJTPREDECREMENTEXPRESSION = 49;
  public int JJTPOSTINCREMENTEXPRESSION = 50;
  public int JJTPOSTDECREMENTEXPRESSION = 51;
  public int JJTID = 52;
  public int JJTARRAYID = 53;
  public int JJTTRUENODE = 54;
  public int JJTFALSENODE = 55;
  public int JJTCHARCONSTNODE = 56;
  public int JJTSTRINGCONSTNODE = 57;
  public int JJTINTCONSTNODE = 58;
  public int JJTFLOATCONSTNODE = 59;
  public int JJTBLOCK = 60;
  public int JJTSTATEMENTEXPRESSION = 61;
  public int JJTMETHODCALLSTATEMENT = 62;
  public int JJTIFSTATEMENT = 63;
  public int JJTWHILESTATEMENT = 64;
  public int JJTDOWHILESTATEMENT = 65;
  public int JJTSWITCHSTATEMENT = 66;
  public int JJTCASENODE = 67;
  public int JJTDEFAULTNODE = 68;
  public int JJTFORSTATEMENT = 69;
  public int JJTFOREXPRESSION = 70;
  public int JJTFORINIT = 71;
  public int JJTFORUPDATE = 72;
  public int JJTBREAKSTATEMENT = 73;
  public int JJTCONTINUESTATEMENT = 74;
  public int JJTRETURNSTATEMENT = 75;
  public int JJTINCLUDESTATEMENT = 76;
  public int JJTJSHSTATEMENT = 77;
  public int JJTREADSTATEMENT = 78;
  public int JJTWRITESTATEMENT = 79;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "VarDeclaration",
    "VariableDeclarator",
    "VariableDeclaratorId",
    "ArrayDimNode",
    "MethodDeclaration",
    "MethodDeclarator",
    "FormalParameters",
    "FormalParameter",
    "MainMethodDeclaration",
    "MainMethodDeclarator",
    "MainParameter",
    "MainDeclaratorId",
    "MappedMethodDeclaration",
    "MappedBlock",
    "Type",
    "ResultType",
    "void",
    "ArrayInitializer",
    "Assignment",
    "AddAssignment",
    "SubstractAssignment",
    "MultAssignment",
    "DivAssignment",
    "AndAssignment",
    "ModAssignment",
    "OrAssignment",
    "XorAssignment",
    "OrNode",
    "AndNode",
    "BitwiseOrNode",
    "BitwiseXorNode",
    "BitwiseAndNode",
    "EQNode",
    "NENode",
    "LTNode",
    "GTNode",
    "LENode",
    "GENode",
    "AddNode",
    "SubtractNode",
    "MulNode",
    "DivNode",
    "ModNode",
    "PositiveConstNode",
    "NegativeConstNode",
    "BitwiseComplNode",
    "NotNode",
    "PreIncrementExpression",
    "PreDecrementExpression",
    "PostIncrementExpression",
    "PostDecrementExpression",
    "Id",
    "ArrayId",
    "TrueNode",
    "FalseNode",
    "CharConstNode",
    "StringConstNode",
    "IntConstNode",
    "FloatConstNode",
    "Block",
    "StatementExpression",
    "MethodCallStatement",
    "IfStatement",
    "WhileStatement",
    "DoWhileStatement",
    "SwitchStatement",
    "CaseNode",
    "DefaultNode",
    "ForStatement",
    "ForExpression",
    "ForInit",
    "ForUpdate",
    "BreakStatement",
    "ContinueStatement",
    "ReturnStatement",
    "IncludeStatement",
    "JshStatement",
    "ReadStatement",
    "WriteStatement",
  };
}
